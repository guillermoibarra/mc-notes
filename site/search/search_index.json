{"config":{"lang":["es"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introducci\u00f3n al Curso de Monte Carlo","text":"<p>\u00a1Bienvenidos al Curso de Monte Carlo! Es un placer contar con su participaci\u00f3n en este programa dise\u00f1ado para proporcionar una comprensi\u00f3n s\u00f3lida de los fundamentos del m\u00e9todo de Monte Carlo, complementada con la programaci\u00f3n en Python. Nuestro objetivo es que, al finalizar el curso, puedan utilizar c\u00f3digos de producci\u00f3n de Monte Carlo como MCNP, Serpent, Geant4, PENELOPE, entre otros, con una comprensi\u00f3n profunda y no percibi\u00e9ndolos como una \"caja negra\".</p>"},{"location":"#objetivos-del-curso","title":"Objetivos del Curso","text":"<ul> <li>Fundamentos del M\u00e9todo de Monte Carlo: Presentaremos los conceptos b\u00e1sicos y las teor\u00edas subyacentes que sustentan este m\u00e9todo.</li> <li>Programaci\u00f3n en Python: Reforzaremos los conceptos aprendidos mediante la implementaci\u00f3n pr\u00e1ctica en Python.</li> <li>Herramientas Esenciales: Introduciremos y manejaremos herramientas clave como Docker, el terminal de Linux, tmux, pyenv para entornos virtuales de Python y JupyterLab.</li> <li>Aplicaciones Avanzadas: Exploraremos aplicaciones espec\u00edficas del m\u00e9todo de Monte Carlo, incluyendo el transporte de neutrones y otras \u00e1reas relevantes.</li> </ul>"},{"location":"#estructura-del-curso","title":"Estructura del Curso","text":"<ol> <li>Introducci\u00f3n a las Herramientas: Comenzaremos con una familiarizaci\u00f3n pr\u00e1ctica de Docker, el terminal de Linux, tmux, pyenv y JupyterLab, fundamentales para un entorno de desarrollo eficiente.</li> <li>Fundamentos de Python: Abordaremos los aspectos b\u00e1sicos de Python necesarios para implementar algoritmos de Monte Carlo.</li> <li>Estad\u00edstica y M\u00e9todos Matem\u00e1ticos: Cubriremos los principios estad\u00edsticos y matem\u00e1ticos esenciales para aplicar el m\u00e9todo de Monte Carlo de manera efectiva.</li> <li>Aplicaci\u00f3n del M\u00e9todo de Monte Carlo:</li> <li>Integrales: Iniciaremos con la resoluci\u00f3n de integrales utilizando t\u00e9cnicas de Monte Carlo.</li> <li>Transporte de Neutrones: Ampliararemos el conocimiento hacia aplicaciones m\u00e1s complejas como el transporte de neutrones.</li> <li>Otras Aplicaciones: Exploraremos diversas aplicaciones avanzadas relevantes para diferentes \u00e1reas de investigaci\u00f3n y desarrollo.</li> </ol>"},{"location":"#metodologia","title":"Metodolog\u00eda","text":"<p>Nuestro enfoque es progresivo y pr\u00e1ctico. Cada sesi\u00f3n combinar\u00e1 teor\u00eda con ejercicios pr\u00e1cticos en Python, permitiendo una comprensi\u00f3n aplicada de los conceptos. Esta metodolog\u00eda asegura que adquieran tanto el conocimiento te\u00f3rico como las habilidades pr\u00e1cticas necesarias para utilizar c\u00f3digos de Monte Carlo con confianza y precisi\u00f3n.</p>"},{"location":"#beneficios-del-curso","title":"Beneficios del Curso","text":"<ul> <li>Comprensi\u00f3n Profunda: Entender\u00e1n c\u00f3mo funcionan los m\u00e9todos de Monte Carlo y las herramientas asociadas.</li> <li>Habilidades Pr\u00e1cticas: Desarrollar\u00e1n competencias en Python y en el manejo de herramientas esenciales para el desarrollo cient\u00edfico.</li> <li>Preparaci\u00f3n Avanzada: Estar\u00e1n preparados para interpretar y utilizar c\u00f3digos de Monte Carlo en sus propios proyectos, mejorando su eficiencia y efectividad en investigaciones futuras.</li> </ul> <p>Esperamos que este curso sea una experiencia enriquecedora que potencie sus capacidades anal\u00edticas y t\u00e9cnicas, abriendo nuevas oportunidades en sus respectivas \u00e1reas de estudio e investigaci\u00f3n. \u00a1Iniciemos juntos este emocionante camino hacia el dominio del m\u00e9todo de Monte Carlo!</p>"},{"location":"intro/probability/","title":"Probability","text":"<p>Add notes here</p>"},{"location":"tools/docker/","title":"Contenedor de Docker para el Curso de Monte Carlo","text":"<p>Bienvenidos al Curso de Monte Carlo. Este documento te guiar\u00e1 a trav\u00e9s de la configuraci\u00f3n y el uso de un entorno Docker optimizado para el desarrollo y ejecuci\u00f3n de proyectos relacionados con Monte Carlo. A continuaci\u00f3n, encontrar\u00e1s una introducci\u00f3n a Docker, instrucciones detalladas sobre c\u00f3mo utilizarlo, y una lista completa de comandos \u00fatiles para gestionar tu entorno Docker de manera eficiente.</p>"},{"location":"tools/docker/#introduccion-a-docker","title":"Introducci\u00f3n a Docker","text":"<p>Antes de sumergirnos en los conceptos y aplicaciones avanzadas de Monte Carlo, es fundamental comprender las herramientas que facilitar\u00e1n nuestro aprendizaje y desarrollo durante el curso. Una de estas herramientas clave es Docker. En esta secci\u00f3n, exploraremos qu\u00e9 es Docker, c\u00f3mo se utiliza y los beneficios que aporta espec\u00edficamente a nuestro curso.</p>"},{"location":"tools/docker/#que-es-docker","title":"\u00bfQu\u00e9 es Docker?","text":"<p>Docker es una plataforma de c\u00f3digo abierto que permite automatizar la creaci\u00f3n, despliegue y gesti\u00f3n de contenedores de software. Un contenedor es una unidad est\u00e1ndar de software que empaqueta el c\u00f3digo de una aplicaci\u00f3n junto con todas sus dependencias, bibliotecas y configuraciones necesarias para que funcione de manera consistente en cualquier entorno.</p> <p>Componentes Clave de Docker:</p> <ul> <li>Imagen (Image): Una plantilla inmutable que contiene el sistema de archivos y las configuraciones necesarias para ejecutar una aplicaci\u00f3n.</li> <li>Contenedor (Container): Una instancia en ejecuci\u00f3n de una imagen. Los contenedores son aislados y port\u00e1tiles.</li> <li>Dockerfile: Un archivo de texto que contiene una serie de instrucciones para construir una imagen de Docker.</li> <li>Docker Compose: Una herramienta que permite definir y gestionar aplicaciones multi-contenedor utilizando un archivo YAML.</li> </ul>"},{"location":"tools/docker/#como-se-usa-docker","title":"\u00bfC\u00f3mo se Usa Docker?","text":"<p>Docker se utiliza para crear entornos de desarrollo y producci\u00f3n que sean consistentes y reproducibles. A continuaci\u00f3n, se describen algunos usos comunes de Docker:</p> <ol> <li>Desarrollo de Aplicaciones: Los desarrolladores pueden crear contenedores que replican el entorno de producci\u00f3n, asegurando que el c\u00f3digo funcione de la misma manera en diferentes m\u00e1quinas.</li> <li>Pruebas y QA: Facilita la creaci\u00f3n de entornos aislados para realizar pruebas automatizadas y garantizar la calidad del software.</li> <li>Despliegue de Aplicaciones: Permite desplegar aplicaciones de manera r\u00e1pida y eficiente en diferentes plataformas y servicios en la nube.</li> <li>Microservicios: Docker es ideal para arquitecturas basadas en microservicios, donde cada componente de la aplicaci\u00f3n se ejecuta en su propio contenedor.</li> </ol> <p>Flujo de Trabajo B\u00e1sico con Docker:</p> <ol> <li>Escribir un Dockerfile: Define las instrucciones para construir la imagen de Docker.</li> <li>Construir la Imagen: Utiliza el comando <code>docker build</code> para crear una imagen a partir del Dockerfile.</li> <li>Ejecutar un Contenedor: Inicia un contenedor basado en la imagen creada.</li> <li>Gestionar Contenedores: Utiliza comandos como <code>docker ps</code>, <code>docker stop</code>, y <code>docker rm</code> para gestionar los contenedores en ejecuci\u00f3n.</li> </ol>"},{"location":"tools/docker/#beneficios-de-usar-docker-en-este-curso","title":"Beneficios de Usar Docker en Este Curso","text":"<p>Integrar Docker en nuestro curso de Monte Carlo ofrece m\u00faltiples ventajas que enriquecer\u00e1n tu experiencia de aprendizaje:</p> <ol> <li> <p>Entorno Consistente: Docker garantiza que todos los estudiantes trabajen en el mismo entorno de desarrollo, eliminando las discrepancias que pueden surgir debido a diferencias en las configuraciones locales. Esto asegura que el c\u00f3digo y las aplicaciones funcionen de manera id\u00e9ntica para todos.</p> </li> <li> <p>F\u00e1cil Configuraci\u00f3n y Despliegue: Con Docker, configurar el entorno de desarrollo es r\u00e1pido y sencillo. No necesitas preocuparte por instalar manualmente dependencias, bibliotecas o herramientas espec\u00edficas. Simplemente clonas el repositorio, construyes el contenedor y est\u00e1s listo para comenzar.</p> </li> <li> <p>Aislamiento de Proyectos: Cada proyecto o ejercicio puede ejecutarse en su propio contenedor aislado, evitando conflictos entre diferentes versiones de software o dependencias. Esto facilita la gesti\u00f3n de m\u00faltiples proyectos simult\u00e1neamente.</p> </li> <li> <p>Portabilidad: Los contenedores Docker pueden ejecutarse en cualquier sistema que soporte Docker, ya sea tu computadora local, un servidor remoto o en la nube. Esto permite que puedas continuar tu trabajo desde diferentes ubicaciones sin problemas de compatibilidad.</p> </li> <li> <p>Reproducibilidad: Docker facilita la replicaci\u00f3n de entornos y experimentos, lo cual es crucial en metodolog\u00edas como Monte Carlo donde la reproducibilidad de resultados es fundamental. Puedes compartir f\u00e1cilmente tu entorno con otros estudiantes o colaboradores, asegurando que todos trabajen bajo las mismas condiciones.</p> </li> <li> <p>Escalabilidad: A medida que avances en el curso y trabajes en proyectos m\u00e1s complejos, Docker te permitir\u00e1 escalar tu entorno de desarrollo sin dificultades, gestionando recursos de manera eficiente y optimizando el rendimiento.</p> </li> <li> <p>Aprendizaje de Herramientas Industriales: Docker es una herramienta ampliamente utilizada en la industria del software y la ciencia de datos. Al familiarizarte con Docker durante este curso, adquirir\u00e1s habilidades valiosas que ser\u00e1n altamente apreciadas en el mercado laboral.</p> </li> </ol>"},{"location":"tools/docker/#conclusion","title":"Conclusi\u00f3n","text":"<p>Docker es una herramienta poderosa que transformar\u00e1 la manera en que desarrollas y gestionas tus proyectos en el Curso de Monte Carlo. Al aprovechar sus capacidades, podr\u00e1s enfocarte en los conceptos y t\u00e9cnicas de Monte Carlo sin preocuparte por las complicaciones t\u00e9cnicas relacionadas con el entorno de desarrollo. En las pr\u00f3ximas secciones, profundizaremos en la configuraci\u00f3n del entorno y en el uso pr\u00e1ctico de Docker, aprendiendo a construir, gestionar y optimizar contenedores para maximizar tu productividad y eficiencia.</p>"},{"location":"tools/docker/#instrucciones-para-configurar-el-entorno","title":"Instrucciones para Configurar el Entorno","text":"<p>Este proyecto permite configurar y ejecutar un entorno Docker con JupyterLab de forma r\u00e1pida. Sigue estos pasos para asegurarte de que todo funcione correctamente.</p>"},{"location":"tools/docker/#requisitos-previos","title":"Requisitos Previos","text":"<p>Antes de comenzar, aseg\u00farate de tener instalados los siguientes programas:</p> <ol> <li>Windows Terminal: Necesario para ejecutar comandos en la terminal.</li> <li>Git: Necesario para clonar el repositorio.</li> <li>Docker Desktop: Necesario para ejecutar contenedores Docker.</li> </ol>"},{"location":"tools/docker/#instalacion-paso-a-paso","title":"Instalaci\u00f3n Paso a Paso","text":""},{"location":"tools/docker/#1-clonar-el-repositorio","title":"1. Clonar el Repositorio","text":"<p>Ve al Escritorio, haz clic derecho y selecciona Abrir en Windows Terminal. Clona el repositorio con el siguiente comando:</p> <pre><code>git clone https://github.com/guillermoibarra/mc-docker-env.git\n</code></pre>"},{"location":"tools/docker/#2-construir-el-contenedor","title":"2. Construir el Contenedor","text":"<p>Navega al directorio ra\u00edz del proyecto reci\u00e9n clonado:</p> <pre><code>cd mc-docker-env\n</code></pre> <p>Construir el contenedor:</p> <pre><code>docker-compose build\n</code></pre> <p>Iniciar el contenedor en modo despejado:</p> <pre><code>docker-compose up -d\n</code></pre> <p>Verificar el contenedor:</p> <pre><code>docker ps\n</code></pre>"},{"location":"tools/docker/#3-ejecutar-el-contenedor","title":"3. Ejecutar el Contenedor","text":"<p>Empezar el proceso <code>zsh</code>:</p> <pre><code>docker exec -it mc-taller-env-container zsh\n</code></pre>"},{"location":"tools/docker/#comandos-adicionales-utiles-para-docker","title":"Comandos Adicionales \u00datiles para Docker","text":"<p>Adem\u00e1s de los comandos b\u00e1sicos que ya has incluido en el README, hay una serie de comandos adicionales que pueden ser muy \u00fatiles para gestionar y mantener tu entorno Docker durante el curso de Monte Carlo. A continuaci\u00f3n, se presentan estos comandos junto con una breve explicaci\u00f3n de su uso y ejemplos pr\u00e1cticos en el contexto de nuestro proyecto.</p>"},{"location":"tools/docker/#1-detener-los-contenedores","title":"1. Detener los Contenedores","text":"<p>Para detener los contenedores que est\u00e1n actualmente en ejecuci\u00f3n, puedes usar:</p> <pre><code>docker-compose down\n</code></pre> <p>Este comando detiene y elimina los contenedores, redes y vol\u00famenes definidos en el archivo <code>docker-compose.yml</code>. Es \u00fatil cuando necesitas reiniciar el entorno o liberar recursos del sistema.</p>"},{"location":"tools/docker/#2-reiniciar-los-contenedores","title":"2. Reiniciar los contenedores","text":"<p>Si necesitas reiniciar los contenedores despu\u00e9s de realizar cambios en la configuraci\u00f3n o en el c\u00f3digo, puedes usar:</p> <pre><code>docker-compose restart\n</code></pre> <p>Reinicia todos los contenedores definidos en el archivo <code>docker-compose.yml</code> sin reconstruir las im\u00e1genes.</p>"},{"location":"tools/docker/#3-ver-los-logs-de-un-contenedor","title":"3. Ver los Logs de un Contenedor","text":"<p>Para diagnosticar problemas o simplemente monitorear lo que est\u00e1 sucediendo dentro de un contenedor, puedes ver sus logs:</p> <pre><code>docker logs &lt;nombre_del_contenedor&gt;\n</code></pre> <p>Muestra los registros de salida del contenedor especificado, lo que es \u00fatil para depuraci\u00f3n y monitoreo.</p>"},{"location":"tools/docker/#4-actualizar-el-entorno-despues-de-cambios","title":"4. Actualizar el Entorno Despu\u00e9s de Cambios","text":"<p>Si realizas cambios en el <code>Dockerfile</code> o en el <code>docker-compose.yml</code>, necesitar\u00e1s reconstruir las im\u00e1genes y reiniciar los contenedores:</p> <pre><code>docker-compose up -d --build\n</code></pre> <p>Este comando reconstruye las im\u00e1genes seg\u00fan las modificaciones realizadas y luego inicia los contenedores en modo desacoplado.</p>"},{"location":"tools/docker/#5-eliminar-imagenes-no-utilizadas","title":"5. Eliminar Im\u00e1genes No Utilizadas","text":"<p>Para mantener tu sistema limpio y liberar espacio, puedes eliminar im\u00e1genes que ya no se utilizan:</p> <pre><code>docker image prune\n</code></pre> <p>Elimina todas las im\u00e1genes que no est\u00e1n siendo utilizadas por ning\u00fan contenedor.</p>"},{"location":"tools/docker/#6-acceder-a-la-terminal-del-contenedor-con-bash","title":"6. Acceder a la Terminal del Contenedor con Bash","text":"<p>Aunque estamos usando <code>zsh</code>, a veces puede ser \u00fatil acceder al contenedor usando bash si est\u00e1 disponible:</p> <pre><code>docker exec -it mc-taller-env-container zsh\n</code></pre>"},{"location":"tools/docker/#7-listar-todos-los-contenedores-activos-e-inactivos","title":"7. Listar Todos los Contenedores (Activos e Inactivos)","text":"<p>Para ver todos los contenedores, incluyendo los que no est\u00e1n en ejecuci\u00f3n:</p> <pre><code>docker ps -a\n</code></pre> <p>Muestra una lista completa de todos los contenedores, proporcionando informaci\u00f3n sobre su estado actual.</p>"},{"location":"tools/docker/#8-eliminar-un-contenedor-especifico","title":"8. Eliminar un Contenedor Espec\u00edfico","text":"<p>Si necesitas eliminar un contenedor espec\u00edfico, primero aseg\u00farate de que est\u00e9 detenido y luego elim\u00ednalo:</p> <pre><code>docker rm &lt;nombre_del_contenedor&gt;\n</code></pre> <p>Elimina el contenedor especificado de tu sistema. \u00datil para limpiar contenedores que ya no necesitas.</p>"},{"location":"tools/docker/#9-ver-las-imagenes-disponibles-en-tu-sistema","title":"9. Ver las Im\u00e1genes Disponibles en tu Sistema","text":"<p>Para listar todas las im\u00e1genes de Docker que tienes localmente:</p> <pre><code>docker images\n</code></pre> <p>Muestra una lista de todas las im\u00e1genes descargadas en tu sistema, incluyendo sus etiquetas y tama\u00f1os.</p>"},{"location":"tools/docker/#10-inspeccionar-un-contenedor-o-imagen","title":"10. Inspeccionar un Contenedor o Imagen","text":"<p>Para obtener detalles detallados sobre un contenedor o una imagen espec\u00edfica:</p> <pre><code>docker inspect &lt;nombre_del_contenedor_o_imagen&gt;\n</code></pre> <p>Proporciona informaci\u00f3n detallada en formato JSON sobre la configuraci\u00f3n y el estado del contenedor o la imagen.</p>"},{"location":"tools/docker/#11-comprobar-el-estado-del-sistema-docker","title":"11. Comprobar el Estado del Sistema Docker","text":"<p>Para obtener una visi\u00f3n general del estado actual de Docker en tu sistema:</p> <pre><code>docker system info\n</code></pre> <p>Muestra informaci\u00f3n detallada sobre la configuraci\u00f3n de Docker, incluyendo versiones, recursos utilizados y m\u00e1s.</p>"},{"location":"tools/docker/#12-limpiar-recursos-no-utilizados","title":"12. Limpiar Recursos No Utilizados","text":"<p>Para liberar espacio eliminando contenedores detenidos, im\u00e1genes no utilizadas, vol\u00famenes sin referencia y redes no utilizadas:</p> <pre><code>docker system prune\n</code></pre> <p>Ejecuta una limpieza completa eliminando todos los recursos no utilizados, ayudando a mantener tu sistema optimizado.</p>"},{"location":"tools/docker/#13-ejecutar-comandos-en-un-contenedor-en-ejecucion","title":"13. Ejecutar Comandos en un Contenedor en Ejecuci\u00f3n","text":"<p>Para ejecutar cualquier comando adicional dentro de un contenedor en ejecuci\u00f3n:</p> <pre><code>docker exec -it &lt;nombre_del_contenedor&gt; &lt;comando&gt;\n</code></pre>"},{"location":"tools/docker/#14-guardar-y-cargar-imagenes-de-docker","title":"14. Guardar y Cargar Im\u00e1genes de Docker","text":"<p>Guardar una Imagen:</p> <pre><code>docker save -o &lt;archivo_de_salida&gt;.tar &lt;nombre_de_la_imagen&gt;\n</code></pre> <p>Exporta una imagen de Docker a un archivo tar, facilitando su distribuci\u00f3n o respaldo.</p> <p>Cargar una Imagen:</p> <pre><code>docker load -i &lt;archivo_de_entrada&gt;.tar\n</code></pre> <p>Importa una imagen de Docker desde un archivo tar previamente guardado.</p>"},{"location":"tools/docker/#15-buscar-imagenes-en-docker-hub","title":"15. Buscar Im\u00e1genes en Docker Hub","text":"<p>Para buscar im\u00e1genes disponibles en Docker Hub directamente desde la terminal:</p> <pre><code>docker search &lt;t\u00e9rmino_de_b\u00fasqueda&gt;\n</code></pre> <p>Ayuda a encontrar im\u00e1genes oficiales o de terceros que puedan ser \u00fatiles para tu proyecto.</p>"},{"location":"tools/docker/#16-actualizar-docker-compose","title":"16. Actualizar Docker Compose","text":"<p>Mantener <code>docker-compose</code> actualizado es crucial para aprovechar las \u00faltimas mejoras y correcciones de errores. Para actualizar <code>docker-compose</code> en sistemas basados en Unix:</p> <pre><code>sudo curl -L \"https://github.com/docker/compose/releases/download/&lt;versi\u00f3n&gt;/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose\nsudo chmod +x /usr/local/bin/docker-compose\n</code></pre> <p>Reemplaza <code>&lt;versi\u00f3n&gt;</code> con la versi\u00f3n deseada para descargar e instalar la \u00faltima versi\u00f3n de <code>docker-compose</code>.</p>"},{"location":"tools/docker/#17-mover-archivos-hacia-y-desde-el-contenedor","title":"17. Mover Archivos hacia y desde el Contenedor","text":"<p>Para mover archivos entre tu sistema host y el contenedor Docker, puedes utilizar el comando <code>docker cp</code>. En nuestro entorno, hemos definido un volumen:</p> <pre><code>volumes:\n      - taller_data:/home/taller\n</code></pre> <p>Esto significa que el directorio <code>/home/taller</code> dentro del contenedor est\u00e1 asociado al volumen <code>taller_data</code>. Aunque los vol\u00famenes nombrados no son f\u00e1cilmente accesibles directamente desde el host, <code>docker cp</code> es una herramienta eficaz para transferir archivos.</p> <p>Para copiar un archivo o directorio desde tu sistema host al contenedor, usa el siguiente comando:</p> <pre><code>docker cp &lt;ruta_en_host&gt; mc-taller-env-container:/home/taller/\n</code></pre> <p>Por ejemplo, supongamos que tienes un archivo llamado data.csv en tu escritorio y deseas copiarlo al directorio <code>/home/taller</code> dentro del contenedor:</p> <pre><code>docker cp ~/Desktop/data.csv mc-taller-env-container:/home/taller/\n</code></pre> <p>Para copiar un archivo o directorio desde el contenedor a tu sistema host, usa:</p> <pre><code>docker cp mc-taller-env-container:/home/taller/&lt;archivo_o_directorio&gt; &lt;ruta_en_host&gt;\n</code></pre>"},{"location":"tools/docker/#resumen-de-comandos-clave","title":"Resumen de Comandos Clave","text":"Comando Descripci\u00f3n <code>docker-compose down</code> Detiene y elimina contenedores, redes y vol\u00famenes. <code>docker-compose restart</code> Reinicia los contenedores sin reconstruir im\u00e1genes. <code>docker logs &lt;contenedor&gt;</code> Muestra los logs de un contenedor espec\u00edfico. <code>docker-compose up -d --build</code> Reconstruye im\u00e1genes y reinicia los contenedores. <code>docker image prune</code> Elimina im\u00e1genes no utilizadas. <code>docker exec -it &lt;contenedor&gt; bash</code> Accede al contenedor usando bash. <code>docker ps -a</code> Lista todos los contenedores, activos e inactivos. <code>docker rm &lt;contenedor&gt;</code> Elimina un contenedor espec\u00edfico. <code>docker images</code> Lista todas las im\u00e1genes locales. <code>docker inspect &lt;objeto&gt;</code> Muestra detalles de un contenedor o imagen. <code>docker system info</code> Proporciona informaci\u00f3n general sobre Docker. <code>docker system prune</code> Limpia recursos no utilizados. <code>docker exec -it &lt;contenedor&gt; &lt;cmd&gt;</code> Ejecuta un comando dentro de un contenedor. <code>docker save -o archivo.tar &lt;imagen&gt;</code> Guarda una imagen en un archivo tar. <code>docker load -i archivo.tar</code> Carga una imagen desde un archivo tar. <code>docker search &lt;t\u00e9rmino&gt;</code> Busca im\u00e1genes en Docker Hub. Actualizaci\u00f3n de Docker Compose Actualiza <code>docker-compose</code> a la \u00faltima versi\u00f3n. <code>docker cp &lt;host_path&gt; &lt;container&gt;:&lt;container_path&gt;</code> Copia archivos desde el host al contenedor. <code>docker cp &lt;container&gt;:&lt;container_path&gt; &lt;host_path&gt;</code> Copia archivos desde el contenedor al host."},{"location":"tools/pyenv/","title":"pyenv","text":""},{"location":"tools/pyenv/#introduccion-a-pyenv","title":"Introducci\u00f3n a pyenv","text":"<p>En el Curso de Monte Carlo, es fundamental gestionar eficazmente las versiones de Python y los entornos virtuales para asegurar un desarrollo coherente y libre de conflictos. Para lograr esto, utilizamos pyenv, una herramienta poderosa y flexible que facilita la administraci\u00f3n de m\u00faltiples versiones de Python y la creaci\u00f3n de entornos virtuales aislados. A continuaci\u00f3n, exploraremos qu\u00e9 es pyenv, c\u00f3mo funciona y los beneficios que aporta espec\u00edficamente a nuestro curso.</p>"},{"location":"tools/pyenv/#que-es-pyenv","title":"\u00bfQu\u00e9 es pyenv?","text":"<p>pyenv es una herramienta de gesti\u00f3n de versiones de Python que permite instalar, cambiar y administrar m\u00faltiples versiones de Python en un solo sistema de manera sencilla. Con pyenv, puedes alternar entre diferentes versiones de Python para diferentes proyectos, asegurando que cada proyecto utilice la versi\u00f3n adecuada sin interferencias.</p>"},{"location":"tools/pyenv/#como-funciona-pyenv","title":"\u00bfC\u00f3mo Funciona pyenv?","text":"<p>pyenv funciona interceptando los comandos relacionados con Python y redirigi\u00e9ndolos a la versi\u00f3n de Python especificada por el usuario. Se integra con el sistema mediante ajustes en el archivo de configuraci\u00f3n del shell (como <code>.zshrc</code>), lo que permite cambiar de versi\u00f3n de Python de manera din\u00e1mica seg\u00fan el directorio de trabajo o la configuraci\u00f3n del proyecto.</p>"},{"location":"tools/pyenv/#componentes-clave-de-pyenv","title":"Componentes Clave de pyenv","text":"<ul> <li>pyenv: El n\u00facleo de la herramienta que gestiona las versiones de Python.</li> <li>pyenv-virtualenv: Un plugin para pyenv que facilita la creaci\u00f3n y gesti\u00f3n de entornos virtuales.</li> <li>Shims: Peque\u00f1os scripts que interceptan las llamadas a Python y redirigen a la versi\u00f3n correcta.</li> </ul>"},{"location":"tools/pyenv/#beneficios-de-usar-pyenv-en-este-curso","title":"Beneficios de Usar pyenv en Este Curso","text":"<p>Integrar pyenv en nuestro flujo de trabajo del Curso de Monte Carlo ofrece m\u00faltiples ventajas que mejorar\u00e1n tu experiencia de desarrollo:</p> <ol> <li>Gesti\u00f3n Sencilla de M\u00faltiples Versiones de Python</li> </ol> <p>pyenv permite instalar y utilizar m\u00faltiples versiones de Python en el mismo sistema sin conflictos. Esto es especialmente \u00fatil cuando trabajamos con diferentes proyectos que requieren versiones espec\u00edficas de Python.</p> <ol> <li>Entornos Virtuales Aislados</li> </ol> <p>Con pyenv-virtualenv, puedes crear entornos virtuales aislados para cada proyecto, asegurando que las dependencias y paquetes instalados no afecten a otros proyectos. Esto promueve las mejores pr\u00e1cticas de desarrollo y evita problemas de compatibilidad.</p> <ol> <li>Flexibilidad y Control</li> </ol> <p>Puedes cambiar f\u00e1cilmente la versi\u00f3n de Python a nivel global, por directorio o por proyecto, proporcionando un control granular sobre tu entorno de desarrollo.</p> <ol> <li>Facilidad de Instalaci\u00f3n y Uso</li> </ol> <p>pyenv simplifica la instalaci\u00f3n de nuevas versiones de Python y la creaci\u00f3n de entornos virtuales con comandos sencillos, eliminando la necesidad de configuraciones manuales complejas.</p> <ol> <li>Compatibilidad con Docker</li> </ol> <p>Aunque utilizamos Docker para encapsular nuestros entornos, pyenv es igualmente \u00fatil para gestionar entornos de desarrollo locales, facilitando el desarrollo y las pruebas fuera de los contenedores Docker.</p> <ol> <li>Mejora de la Productividad</li> </ol> <p>Al automatizar la gesti\u00f3n de versiones y entornos, pyenv te permite enfocarte m\u00e1s en el desarrollo y menos en la configuraci\u00f3n del entorno, aumentando tu eficiencia y productividad.</p>"},{"location":"tools/pyenv/#cheatsheet-de-comandos-de-pyenv","title":"Cheatsheet de Comandos de pyenv","text":""},{"location":"tools/pyenv/#comandos-generales","title":"Comandos Generales","text":"Comando Descripci\u00f3n <code>pyenv install &lt;versi\u00f3n&gt;</code> Instala una versi\u00f3n espec\u00edfica de Python. <code>pyenv uninstall &lt;versi\u00f3n&gt;</code> Desinstala una versi\u00f3n espec\u00edfica de Python. <code>pyenv versions</code> Lista todas las versiones de Python instaladas. <code>pyenv global &lt;versi\u00f3n&gt;</code> Establece la versi\u00f3n global de Python. <code>pyenv local &lt;versi\u00f3n&gt;</code> Establece la versi\u00f3n de Python para el directorio actual. <code>pyenv shell &lt;versi\u00f3n&gt;</code> Establece la versi\u00f3n de Python para la sesi\u00f3n actual. <code>pyenv rehash</code> Recalcula los shims de pyenv (usualmente autom\u00e1tico). <code>pyenv which &lt;comando&gt;</code> Muestra la ruta del ejecutable para un comando dado."},{"location":"tools/pyenv/#comandos-de-entornos-virtuales-pyenv-virtualenv","title":"Comandos de Entornos Virtuales (pyenv-virtualenv)","text":"Comando Descripci\u00f3n <code>pyenv virtualenv &lt;versi\u00f3n&gt; &lt;nombre_env&gt;</code> Crea un entorno virtual con la versi\u00f3n especificada. <code>pyenv virtualenv-delete &lt;nombre_env&gt;</code> Elimina un entorno virtual espec\u00edfico. <code>pyenv activate &lt;nombre_env&gt;</code> Activa el entorno virtual especificado. <code>pyenv deactivate</code> Desactiva el entorno virtual activo. <code>pyenv virtualenvs</code> Lista todos los entornos virtuales creados."},{"location":"tools/pyenv/#comandos-de-navegacion-y-gestion","title":"Comandos de Navegaci\u00f3n y Gesti\u00f3n","text":"Comando Descripci\u00f3n <code>pyenv version</code> Muestra la versi\u00f3n actual de Python utilizada. <code>pyenv version-name</code> Muestra solo el nombre de la versi\u00f3n actual. <code>pyenv global</code> Muestra la versi\u00f3n global de Python establecida. <code>pyenv local</code> Muestra la versi\u00f3n de Python establecida localmente. <code>pyenv shell</code> Muestra la versi\u00f3n de Python establecida para la sesi\u00f3n."},{"location":"tools/pyenv/#comandos-avanzados","title":"Comandos Avanzados","text":"Comando Descripci\u00f3n <code>pyenv update</code> Actualiza pyenv a la \u00faltima versi\u00f3n disponible. <code>pyenv doctor</code> Ejecuta un script para verificar la instalaci\u00f3n de pyenv. <code>pyenv exec &lt;comando&gt;</code> Ejecuta un comando usando la versi\u00f3n de Python seleccionada."},{"location":"tools/pyenv/#ejemplos-practicos","title":"Ejemplos Pr\u00e1cticos","text":"Ejemplo de Comando Descripci\u00f3n <code>pyenv install 3.8.10</code> Instala Python versi\u00f3n 3.8.10. <code>pyenv global 3.8.10</code> Establece Python 3.8.10 como la versi\u00f3n global. <code>pyenv virtualenv 3.8.10 montecarlo-env</code> Crea un entorno virtual llamado <code>montecarlo-env</code> con Python 3.8.10. <code>pyenv activate montecarlo-env</code> Activa el entorno virtual <code>montecarlo-env</code>. <code>pyenv deactivate</code> Desactiva el entorno virtual activo. <code>pyenv uninstall 3.8.10</code> Desinstala Python versi\u00f3n 3.8.10. <code>pyenv virtualenv-delete montecarlo-env</code> Elimina el entorno virtual <code>montecarlo-env</code>."},{"location":"tools/terminal/","title":"Fundamentos del Terminal Linux con zsh y Starship","text":"<p>En esta secci\u00f3n, aprender\u00e1s los fundamentos del uso del terminal en Linux, enfoc\u00e1ndonos en zsh (Z Shell) y Starship, un prompt moderno y altamente configurable. Comprender\u00e1s c\u00f3mo funcionan estas herramientas, c\u00f3mo se configuran mediante el archivo <code>.zshrc</code>, y c\u00f3mo pueden mejorar tu flujo de trabajo en el entorno Docker configurado para el Curso de Monte Carlo.</p>"},{"location":"tools/terminal/#introduccion-al-terminal-linux","title":"Introducci\u00f3n al Terminal Linux","text":""},{"location":"tools/terminal/#que-es-el-terminal","title":"\u00bfQu\u00e9 es el Terminal?","text":"<p>El Terminal es una interfaz de l\u00ednea de comandos que permite a los usuarios interactuar con el sistema operativo mediante comandos de texto. A diferencia de las interfaces gr\u00e1ficas de usuario (GUI), el terminal ofrece un control m\u00e1s directo y eficiente sobre el sistema.</p>"},{"location":"tools/terminal/#ventajas-de-usar-el-terminal","title":"Ventajas de Usar el Terminal","text":"<ul> <li>Eficiencia y Velocidad: Ejecuta tareas r\u00e1pidamente sin necesidad de navegar por men\u00fas gr\u00e1ficos.</li> <li>Automatizaci\u00f3n de Tareas: Crea scripts para automatizar procesos repetitivos.</li> <li>Acceso a Funcionalidades Avanzadas: Realiza operaciones que no siempre est\u00e1n disponibles en las GUI.</li> </ul>"},{"location":"tools/terminal/#introduccion-a-zsh","title":"Introducci\u00f3n a zsh","text":""},{"location":"tools/terminal/#que-es-zsh","title":"\u00bfQu\u00e9 es zsh?","text":"<p>zsh (Z Shell) es un potente int\u00e9rprete de comandos para sistemas Unix/Linux. Combina las caracter\u00edsticas de otros shells como <code>bash</code>, <code>ksh</code>, y <code>tcsh</code>, ofreciendo mejoras significativas en t\u00e9rminos de personalizaci\u00f3n y funcionalidad.</p>"},{"location":"tools/terminal/#ventajas-de-usar-zsh","title":"Ventajas de Usar zsh","text":"<ul> <li>Autocompletado Avanzado: Ofrece sugerencias inteligentes y completado de comandos m\u00e1s robusto.</li> <li>Mejoras en la Personalizaci\u00f3n: Permite una configuraci\u00f3n altamente personalizada del entorno de trabajo.</li> <li>Integraci\u00f3n con Plugins y Temas: Compatible con frameworks como Oh My Zsh y herramientas como Starship para mejorar la experiencia del usuario.</li> </ul>"},{"location":"tools/terminal/#configuracion-de-zsh-con-zshrc","title":"Configuraci\u00f3n de zsh con <code>.zshrc</code>","text":""},{"location":"tools/terminal/#que-es-el-archivo-zshrc","title":"\u00bfQu\u00e9 es el Archivo <code>.zshrc</code>?","text":"<p>El archivo <code>.zshrc</code> es un script de configuraci\u00f3n que se ejecuta cada vez que se inicia una nueva sesi\u00f3n de zsh. Aqu\u00ed es donde defines variables de entorno, alias, funciones personalizadas, y configuras el prompt, entre otros ajustes.</p>"},{"location":"tools/terminal/#personalizacion-basica","title":"Personalizaci\u00f3n B\u00e1sica","text":""},{"location":"tools/terminal/#cambiar-el-prompt","title":"Cambiar el Prompt","text":"<p>El prompt es la l\u00ednea que ves en el terminal que indica que puedes ingresar un comando. Con zsh y Starship, puedes personalizar este prompt para mostrar informaci\u00f3n \u00fatil como el directorio actual, el estado de Git, etc.</p>"},{"location":"tools/terminal/#alias","title":"Alias","text":"<p>Los alias son atajos para comandos largos o complejos. Por ejemplo:</p> <pre><code>alias ll='ls -la'\nalias gs='git status'\nalias docker-start='docker-compose up -d\n</code></pre>"},{"location":"tools/terminal/#integracion-con-starship","title":"Integraci\u00f3n con Starship","text":"<p>Starship es un prompt r\u00e1pido y personalizable para cualquier shell, incluyendo zsh. Se configura principalmente a trav\u00e9s de un archivo de configuraci\u00f3n separado (<code>starship.toml</code>), pero puede interactuar con <code>.zshrc</code> para una integraci\u00f3n fluida.</p>"},{"location":"tools/terminal/#navegacion-basica-en-el-terminal","title":"Navegaci\u00f3n B\u00e1sica en el Terminal","text":"<p>Comandos de Navegaci\u00f3n de Directorios:</p> <ul> <li><code>cd &lt;directorio&gt;</code>: Cambia al directorio especificado.</li> <li><code>ls</code>: Lista los archivos y carpetas en el directorio actual.</li> <li><code>pwd</code>: Muestra la ruta completa del directorio actual.</li> </ul> <p>Gesti\u00f3n de Archivos y Directorios:</p> <ul> <li><code>cp &lt;origen&gt; &lt;destino&gt;</code>: Copia archivos o directorios.</li> <li><code>mv &lt;origen&gt; &lt;destino&gt;</code>: Mueve o renombra archivos o directorios.</li> <li><code>rm &lt;archivo&gt;</code>: Elimina un archivo.</li> <li><code>mkdir &lt;nombre&gt;</code>: Crea un nuevo directorio.</li> <li><code>rmdir &lt;nombre&gt;</code>: Elimina un directorio vac\u00edo.</li> </ul> <p>Visualizaci\u00f3n y Edici\u00f3n de Archivos:</p> <ul> <li><code>cat &lt;archivo&gt;</code>: Muestra el contenido de un archivo.</li> <li><code>less &lt;archivo&gt;</code>: Permite una visualizaci\u00f3n paginada de un archivo.</li> <li><code>nano &lt;archivo&gt;</code>: Edita un archivo usando el editor Nano.</li> <li><code>vim &lt;archivo&gt;</code>: Edita un archivo usando el editor Vim.</li> </ul>"},{"location":"tools/terminal/#gestion-de-procesos","title":"Gesti\u00f3n de Procesos","text":"<p>Listar Procesos:</p> <ul> <li><code>ps</code>: Muestra los procesos en ejecuci\u00f3n.</li> <li><code>top</code>: Muestra una lista din\u00e1mica de los procesos en ejecuci\u00f3n.</li> <li><code>htop</code>: Una versi\u00f3n mejorada y m\u00e1s interactiva de top (puede requerir instalaci\u00f3n).</li> </ul> <p>Controlar Procesos: - <code>kill &lt;PID&gt;</code>: Termina el proceso con el ID especificado. - <code>pkill &lt;nombre&gt;</code>: Termina procesos por nombre. - <code>bg</code>: Env\u00eda un proceso detenido al fondo. - <code>fg</code>: Trae un proceso del fondo al frente. - <code>jobs</code>: Lista los trabajos en segundo plano y detenidos.</p>"},{"location":"tools/terminal/#redireccion-y-pipes","title":"Redirecci\u00f3n y Pipes","text":"<p>Redirecci\u00f3n de Entrada y Salida:</p> <p><code>&gt;</code>: Redirige la salida de un comando a un archivo, sobrescribi\u00e9ndolo.</p> <pre><code>echo \"Hola Mundo\" &gt; hola.txt\n</code></pre> <p><code>&gt;&gt;</code>: Redirige la salida de un comando a un archivo, agregando al final.</p> <pre><code>echo \"Otra l\u00ednea\" &gt;&gt; hola.txt\n</code></pre> <p><code>&lt;</code>: Redirige la entrada de un archivo a un comando.</p> <pre><code>wc -l &lt; hola.txt\n</code></pre> <p>Uso de Pipes para Encadenar Comandos:</p> <p><code>|</code>: Toma la salida de un comando y la usa como entrada para otro.</p> <pre><code>ls -la | grep \"Proyecto\"\n</code></pre>"},{"location":"tools/tmux/","title":"tmux","text":""},{"location":"tools/tmux/#introduccion-a-tmux","title":"Introducci\u00f3n a tmux","text":"<p>Para mejorar tu productividad y gestionar m\u00faltiples tareas de manera eficiente en el terminal, tmux (Terminal Multiplexer) es una herramienta esencial. En esta secci\u00f3n, aprender\u00e1s qu\u00e9 es tmux, c\u00f3mo funciona, sus conceptos clave como sesiones, ventanas y paneles (panes), y un cheatsheet de comandos b\u00e1sicos para comenzar a utilizarlo eficazmente. Adem\u00e1s, se incluye una configuraci\u00f3n personalizada donde la tecla l\u00edder est\u00e1 definida como Ctrl + Space.</p>"},{"location":"tools/tmux/#que-es-tmux","title":"\u00bfQu\u00e9 es tmux?","text":"<p>tmux es un multiplexor de terminal que te permite crear y gestionar m\u00faltiples sesiones de terminal dentro de una sola ventana de terminal. Con tmux, puedes dividir tu terminal en m\u00faltiples paneles, cada uno ejecutando diferentes procesos o tareas, y mantener estas sesiones activas incluso si cierras la ventana del terminal o te desconectas del sistema.</p>"},{"location":"tools/tmux/#ventajas-de-usar-tmux","title":"Ventajas de Usar tmux","text":"<ul> <li>Multiplexaci\u00f3n de Terminales: Ejecuta m\u00faltiples sesiones de terminal en una sola ventana.</li> <li>Persistencia de Sesiones: Mant\u00e9n tus sesiones activas incluso despu\u00e9s de cerrar el terminal.</li> <li>Organizaci\u00f3n Eficiente: Divide tu terminal en paneles y ventanas para una mejor gesti\u00f3n de tareas.</li> <li>Personalizaci\u00f3n: Configura tmux seg\u00fan tus preferencias para optimizar tu flujo de trabajo.</li> </ul>"},{"location":"tools/tmux/#resumen-de-comandos-clave","title":"Resumen de Comandos Clave","text":""},{"location":"tools/tmux/#comandos-generales","title":"Comandos Generales","text":"Comando Descripci\u00f3n <code>tmux new -s &lt;nombre_sesion&gt;</code> Crea una nueva sesi\u00f3n con el nombre especificado. <code>tmux ls</code> Lista todas las sesiones activas. <code>tmux attach -t &lt;nombre_sesion&gt;</code> Adjunta a una sesi\u00f3n existente. <code>tmux detach</code> Separa la sesi\u00f3n actual sin cerrarla. <code>tmux kill-session -t &lt;nombre_sesion&gt;</code> Elimina una sesi\u00f3n espec\u00edfica."},{"location":"tools/tmux/#atajos-de-teclado","title":"Atajos de Teclado","text":"<p>Nota: Todos los atajos comienzan con la tecla l\u00edder Ctrl + Space.</p> Atajo Acci\u00f3n <code>Ctrl + Space, c</code> Crea una nueva ventana. <code>Ctrl + Space, n</code> Navega a la siguiente ventana. <code>Ctrl + Space, p</code> Navega a la ventana anterior. <code>Ctrl + Space, &lt;n\u00famero&gt;</code> Selecciona la ventana por su n\u00famero. <code>Ctrl + Space, %</code> Divide la ventana actual horizontalmente en dos paneles. <code>Ctrl + Space, \"</code> Divide la ventana actual verticalmente en dos paneles. <code>Ctrl + Space, Flecha (\u2190 \u2191 \u2192 \u2193)</code> Navega entre paneles en la direcci\u00f3n de la flecha. <code>Ctrl + Space, x</code> Cierra el panel actual. <code>Ctrl + Space, d</code> Separa la sesi\u00f3n actual (detach). <code>Ctrl + Space, ?</code> Muestra una lista de todos los atajos de teclado disponibles."},{"location":"tools/tmux/#gestion-de-ventanas-y-paneles","title":"Gesti\u00f3n de Ventanas y Paneles","text":"Comando Descripci\u00f3n <code>Ctrl + Space, c</code> Crea una nueva ventana. <code>Ctrl + Space, n</code> Navega a la siguiente ventana. <code>Ctrl + Space, p</code> Navega a la ventana anterior. <code>Ctrl + Space, &lt;n\u00famero&gt;</code> Selecciona la ventana por su n\u00famero. <code>Ctrl + Space, %</code> Divide la ventana actual horizontalmente. <code>Ctrl + Space, \"</code> Divide la ventana actual verticalmente. <code>Ctrl + Space, Flecha (\u2190 \u2191 \u2192 \u2193)</code> Cambia el enfoque al panel en la direcci\u00f3n de la flecha. <code>Ctrl + Space, o</code> Alterna entre los paneles dentro de una ventana. <code>Ctrl + Space, x</code> Cierra el panel actual."},{"location":"tools/tmux/#comandos-de-navegacion","title":"Comandos de Navegaci\u00f3n","text":"Comando Descripci\u00f3n <code>Ctrl + Space, h</code> Selecciona el panel a la izquierda. <code>Ctrl + Space, j</code> Selecciona el panel inferior. <code>Ctrl + Space, k</code> Selecciona el panel superior. <code>Ctrl + Space, l</code> Selecciona el panel a la derecha."},{"location":"tools/tmux/#otros-comandos-utiles","title":"Otros Comandos \u00datiles","text":"Comando Descripci\u00f3n <code>Ctrl + Space, d</code> Separa la sesi\u00f3n actual (detach). <code>Ctrl + Space, ?</code> Muestra ayuda y lista de atajos disponibles. <code>Ctrl + Space, t</code> Muestra la hora en la barra de estado de tmux. <code>Ctrl + Space, s</code> Lista todas las sesiones activas."}]}